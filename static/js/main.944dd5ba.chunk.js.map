{"version":3,"sources":["img/gh.jpeg","components/nav_item.jsx","components/social.jsx","components/write_call.jsx","components/navbar.jsx","contents/home.jsx","components/wildcard.jsx","contents/projects.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavItem","props","activeItem","setState","click","state","id","this","item","className","href","link","onClick","Component","Social","target","WriteCall","Navbar","Home","src","pic","alt","width","options","strings","autoStart","loop","Wildcard","title","about","Projects","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8GAAAA,EAAOC,QAAU,IAA0B,iC,qNC2B5BC,E,kDAxBf,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAMVC,WAAa,WACX,EAAKC,SAAS,CACZC,OAAQ,EAAKC,MAAMD,SAPnB,EAAKC,MAAQ,CACXD,OAAO,GAHM,E,qDAcf,OACE,wBAAIE,GAAIC,KAAKN,MAAMO,KAAOC,UAAWF,KAAKF,MAAMD,MAAQ,SAAW,MACjE,uBAAGM,KAAMH,KAAKN,MAAMU,KAAMC,QAASL,KAAKL,YACrCK,KAAKN,MAAMO,W,GAlBAK,aCcPC,G,6KAXX,OACE,yBAAKL,UAAU,UACb,uBAAGC,KAAK,4BAA4BK,OAAO,SAAQ,uBAAGN,UAAU,kBAChE,uBAAGC,KAAK,2CAA2CK,OAAO,SAAQ,uBAAGN,UAAU,oBAC/E,uBAAGC,KAAK,sCAAsCK,OAAO,SAAQ,uBAAGN,UAAU,qBAC1E,uBAAGC,KAAK,uDAAuDK,OAAO,SAAQ,uBAAGN,UAAU,yB,GAP9EI,cCYNG,E,uKAVX,OACE,yBAAKP,UAAU,QACb,uBAAGC,KAAK,0BAA0BK,OAAO,SAAQ,uBAAGN,UAAU,oBAC9D,uBAAGC,KAAK,8BAA6B,uBAAGD,UAAU,iBAClD,uBAAGC,KAAK,qBAAqBK,OAAO,SAAQ,uBAAGN,UAAU,sB,GANzCI,aCuBTI,E,uKAfX,OACE,yBAAKR,UAAU,OACf,kBAAC,EAAD,MACA,4BACE,kBAAC,EAAD,CAASD,KAAK,OAAOG,KAAK,MAC1B,kBAAC,EAAD,CAASH,KAAK,WAAWG,KAAK,cAC9B,kBAAC,EAAD,CAASH,KAAK,QAAQG,KAAK,WAC3B,kBAAC,EAAD,CAASH,KAAK,UAAUG,KAAK,cAE/B,kBAAC,EAAD,W,GAdeE,a,kCCqBNK,E,uKAdX,OACE,yBAAKT,UAAU,eACb,yBAAKU,IAAKC,IAAKX,UAAU,aAAaY,IAAI,GAAGC,MAAM,UAEnD,qFAA0D,oDAA1D,uKAIF,kBAAC,IAAD,CAAYC,QAbE,CACRC,QAAS,CAAC,aAAc,OAAQ,gBAAiB,KAAM,QAAS,SAChEC,WAAW,EACXC,MAAM,U,GALCb,aCSJc,E,uKAXX,OACE,yBAAKlB,UAAU,YACb,yBAAKA,UAAU,WACb,4BAAKF,KAAKN,MAAM2B,OAChB,2BAAIrB,KAAKN,MAAM4B,a,GANFhB,aCmBRiB,E,uKAdX,OACE,yBAAKrB,UAAU,UACb,wBAAIA,UAAU,YAAd,eACA,uBAAGC,KAAK,iDAAiDK,OAAO,SAC9D,kBAAC,EAAD,CAAUa,MAAM,aAAaC,MAAM,kDAErC,uBAAGnB,KAAK,sCAAsCK,OAAO,SACnD,kBAAC,EAAD,CAAUa,MAAM,eAAeC,MAAM,wD,GATxBhB,aCyBRkB,MAhBf,WACE,OACE,kBAAC,IAAD,KACE,yBAAKtB,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOuB,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,aACV,kBAAC,EAAD,UCXUC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.944dd5ba.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gh.2ec650e6.jpeg\";","import React, { Component } from 'react';\n// import { Link } from 'react-router-dom';\nclass NavItem extends Component {\nconstructor(props) {\n    super(props);\n    this.state = {\n      click: false\n    }\n}\n\nactiveItem = () => {\n  this.setState({\n    click: !this.state.click\n  });\n}\n\n  render() {\n    return (\n      <li id={this.props.item}  className={this.state.click ? \"active\" : null}>\n        <a href={this.props.link} onClick={this.activeItem} >\n          {this.props.item}\n        </a>\n      </li>\n    );\n  }\n}\n\nexport default NavItem;\n","import React, { Component } from 'react';\nimport 'font-awesome/css/font-awesome.css';\n\nclass Social extends Component {\n  render() {\n    return (\n      <div className='social'>\n        <a href=\"https://github.com/tarcea\" target=\"blank\"><i className=\"fa fa-github\"></i></a>\n        <a href=\"https://www.facebook.com/gheorghe.tarcea\" target=\"blank\"><i className=\"fa fa-facebook\"></i></a>\n        <a href=\"https://www.instagram.com/ghtarcea/\" target=\"blank\"><i className=\"fa fa-instagram\"></i></a>\n        <a href=\"https://www.linkedin.com/in/gheorghe-tarcea-0a2b4589\" target=\"blank\"><i className=\"fa fa-linkedin\"></i></a>\n      </div>\n    );\n  }\n}\n\nexport default Social;\n","import React, { Component } from 'react';\nimport 'font-awesome/css/font-awesome.css';\n\nclass WriteCall extends Component {\n  render() {\n    return (\n      <div className='call'>\n        <a href=\"mailto:tarcea@gmail.com\" target=\"blank\"><i className=\"fa fa-envelope\"></i></a>\n        <a href=\"skype:gheorghe.tarcea?call\"><i className=\"fa fa-skype\"></i></a>\n        <a href=\"tel://+46704024031\" target=\"blank\"><i className=\"fa fa-phone\"></i></a>\n      </div>\n    );\n  }\n}\n\nexport default WriteCall;\n","import React, { Component } from 'react';\n\nimport NavItem from './nav_item';\nimport Social from './social';\nimport WriteCall from './write_call';\n\nclass Navbar extends Component {\n\n\n  render() {\n\n    return (\n      <div className=\"nav\">\n      <Social />\n      <ul>\n        <NavItem item='home' link=\"/\" />\n        <NavItem item='projects' link=\"/projects\" />\n        <NavItem item='about' link=\"/about\" />\n        <NavItem item='contact' link=\"/contact\" />\n      </ul>\n      <WriteCall />\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from 'react';\n\nimport Typewriter from 'typewriter-effect';\nimport pic from '../img/gh.jpeg';\n// import Social from '../components/social';\n\nclass Home extends Component {\n  render() {\n    const options = {\n            strings: ['Full-stack', 'Ruby', 'Ruby on Rails', 'JS', 'React', 'Redux'],\n            autoStart: true,\n            loop: true,\n          }\n    return (\n      <div className=\"condiv home\">\n        <img src={pic} className=\"profilepic\" alt='' width=\"110px\"></img>\n\n        <p>Hi, I am Gheorghe Tarcea... and I'm ready to jump in a <strong>Junior Developer</strong> position and\n      start building amazing applications and make this world more and more beautiful.\n      Right now I am working on small projects just for learning purposes.\n      </p>\n      <Typewriter options={options} />\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\n\nclass Wildcard extends Component {\n  render() {\n    return (\n      <div className=\"wildcard\">\n        <div className=\"compdet\">\n          <h3>{this.props.title}</h3>\n          <p>{this.props.about}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Wildcard;\n","import React, { Component } from 'react';\n\nimport Wildcard from '../components/wildcard';\n// import Social from '../components/social';\n\nclass Projects extends Component {\n  render() {\n    return (\n      <div className=\"condiv\">\n        <h1 className=\"subtopic\">My projects</h1>\n        <a href=\"https://stockholm376-rent-a-pet.herokuapp.com/\" target=\"blank\">\n          <Wildcard title=\"Rent a pet\" about=\"1 week ROR project in a team of 4 developers\" />\n        </a>\n        <a href=\"https://travel-worms.herokuapp.com/\" target=\"blank\">\n          <Wildcard title=\"Travel Worms\" about=\"2 weeks ROR project in a team of 4 developers\" />\n        </a>\n      </div>\n    );\n  }\n}\n\nexport default Projects;\n","import React from 'react';\nimport\n{\nBrowserRouter as Router,\nRoute,\n} from \"react-router-dom\";\n\nimport './App.css';\n\nimport Navbar from './components/navbar';\nimport Home from './contents/home';\nimport Projects from './contents/projects';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <Router>\n      <div className='app'>\n        <Navbar />\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/projects\">\n          <Projects />\n        </Route>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}